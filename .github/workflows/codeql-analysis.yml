name: "CodeQL"

on:
  push:
    branches: [master, ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [master]
  schedule:
    - cron: '0 11 * * 4'

jobs:
  analyse:
    name: Analyse
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    # If this run was triggered by a pull request event, then checkout
    # the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      # Override language selection by uncommenting this and choosing your languages
      # with:
      #   languages: go, javascript, csharp, python, cpp, java

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    #- name: Autobuild
    #  uses: github/codeql-action/autobuild@v1

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    #- run: |
    #   make bootstrap
    #   make release
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        # test against LTS Java version:
        java: [ 1.11 ]

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      activemq:
        # Docker Hub image
        image: rmohr/activemq
        #
        ports:
          # Opens tcp port 6379 on the host and service container
          - 61616:61616
      postgres:
        # Docker Hub image
        image: postgres
        # setup default ports
        ports:
          # Opens tcp port 5432 on the host and service container
          - 5432:5432
        # setup default user for testing 
        env: 
          POSTGRES_PASSWORD: admin
          POSTGRES_USER: admin

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK ${{ matrix.java }} 
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }} 
            
    - name: Maven build      
      env:
        GITHUB_USERNAME2: ${{ secrets.GITHUB_USERNAME2 }}  
        GITHUB_TOKEN2: ${{ secrets.GITHUB_TOKEN2 }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      run: mvn -s $GITHUB_WORKSPACE/.github/workflows/settings.xml -B package --file pom.xml
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
