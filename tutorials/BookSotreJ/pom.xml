<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>tutorials</artifactId>
        <groupId>io.jexxa.tutorials</groupId>
        <version>2.2.1-SNAPSHOT</version>
    </parent>

    <artifactId>bookstore</artifactId>
    <name>BookStore</name>

    <properties>
        <main.class>io.jexxa.tutorials.bookstore.BookStoreApplication</main.class>
        <jmx.port>1091</jmx.port>
    </properties>


    <dependencies>
        <!-- dependencies for tests -->
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-launcher</artifactId>
            <version>${junit.platform.launcher.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.engine.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.jupiter.params.version}</version>
            <scope>test</scope>
        </dependency>


        <!-- dependencies for tests with JDBCAdapter -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgres.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
            <version>${commons.cli.version}</version>
        </dependency>
        <dependency>
            <groupId>io.jexxa</groupId>
            <artifactId>jexxa-core</artifactId>
            <version>2.2.1-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>io.jexxa.addend</groupId>
            <artifactId>Addend</artifactId>
            <version>1.0</version>
            <scope>compile</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>

                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${main.class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-shade-plugin</artifactId> <!-- Extend configuration from parent-pom by main class-->
                <version>3.2.4</version>
                <executions>
                    <execution>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>${main.class}</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin> <!-- build a docker image -->
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>2.5.2</version>
                <configuration>
                    <from>
                        <image>adoptopenjdk/openjdk11:jre-11.0.8_10-alpine</image>
                    </from>
                    <to>
                        <image>${project.groupId}/${project.artifactId}:${project.version}</image>
                    </to>
                    <container>
                        <creationTime>
                            USE_CURRENT_TIMESTAMP
                        </creationTime>

                        <!--- Enable for JMX support.
                       Notes:  - jmxremote.rmi.port and jmxremote.port must be identical in order to access application in docker container
                               - exposed port in section <ports> must be identical to jmxremote.port. Otherwise port forwarding will not work with jmx
                        -->
                        <jvmFlags>
                            -Dcom.sun.management.jmxremote.local.only=false
                            <jvmFlag>
                                -Dcom.sun.management.jmxremote
                            </jvmFlag>
                            <jvmFlag>
                                -Dcom.sun.management.jmxremote.port=${jmx.port}
                            </jvmFlag>
                            <jvmFlag>
                                -Dcom.sun.management.jmxremote.rmi.port=${jmx.port}
                            </jvmFlag>
                            <jvmFlag>
                                -Dcom.sun.management.jmxremote.local.only=false
                            </jvmFlag>
                            <jvmFlag>
                                -Dcom.sun.management.jmxremote.authenticate=false
                            </jvmFlag>
                            <jvmFlag>
                                -Dcom.sun.management.jmxremote.ssl=false
                            </jvmFlag>
                            <jvmFlag>
                                -Djava.rmi.server.hostname=localhost
                            </jvmFlag>
                            <jvmFlag>
                                -Dio.jexxa.jdbc.url=jdbc:postgresql://172.17.0.4:5432/bookstore
                            </jvmFlag>
                        </jvmFlags>

                        <!--- Enable for jdbc support  -->
                        <args>
                            <arg>
                                -jdbc
                            </arg>
                        </args>

                        <ports>
                            <port>7000</port>
                            <port>${jmx.port}</port>
                        </ports>
                    </container>
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>